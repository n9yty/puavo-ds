#!/usr/bin/ruby1.9.3
#
# Dump all databases and slapd configurations (cn=config)
#
# Usage: puavo-dump-all-databasesa [DUMP DIRECTORY]
#

require 'ldap'
require 'puavo/etc'
require 'puavo/execute'

dump_directory = ARGV[0]
if dump_directory.nil? || dump_directory == "--help" || dump_directory == "-h"
  puts "Set destination directory for dump files\n\n"
  puts "Usage: puavo-dump-all-databasesa [DUMP DIRECTORY]\n\n"
  exit 2
end

if not File.directory?(dump_directory)
  $stderr.puts "Can't find destination directory: #{dump_directory}"
  exit 2
end

# Dump cn=config database
puts "Dump cn=config to " + File.join(dump_directory, "cn=config.ldif")
response = Puavo::Execute.run(
             ["slapcat",
              "-b",
              "cn=config",
              "-l", File.join(dump_directory, "cn=config.ldif")])

# Find all databases
conn = LDAP::SSLConn.new(host=PUAVO_ETC.ldap_master, port=636)
conn.set_option(LDAP::LDAP_OPT_PROTOCOL_VERSION, 3)

databases = []
filter = "(&(objectClass=olcDatabaseConfig)(objectClass=olcHdbConfig))"
conn.bind(PUAVO_ETC.ldap_dn, PUAVO_ETC.ldap_password) do
  conn.search("cn=config",
              LDAP::LDAP_SCOPE_SUBTREE,
              filter,
              ["olcSuffix"]) do |result|

    databases.push(result["olcSuffix"].first)
  end
end

raise "Can't find any databases: #{filter}" if databases.empty?

# Backup all databases
databases.each do |base|
  backup_file = File.join(dump_directory, "#{base}.ldif")

  puts "Dump #{base} database to #{ backup_file } file"

  Puavo::Execute.run(
    ["slapcat",
     "-b", base,
     "-l", backup_file ])
end
